"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""
from collections import deque
class Solution:
    def connect(self, root: 'Node') -> 'Node':
        lev = [deque() for _ in range(6000)]
        def search(node, level, lev):
            if node:
                if lev[level]:
                    lev[level].pop().next = node
                lev[level].append(node)
            else:
                return
            if node.left:
                search(node.left, level+1, lev)
            if node.right:
                search(node.right, level+1, lev)
                
        search(root, 0, lev)
        return root
