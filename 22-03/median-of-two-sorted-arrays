class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        i1, i2 = 0, 0
        len1 = len(nums1)
        len2 = len(nums2)
        if (len1 + len2) % 2 == 0:
            target = (len1 + len2)//2-1
        else:
            target = (len1 + len2)//2
        flag = -1
        while i1<len1 and i2<len2:
            if i1 + i2 == target:
                break
            if nums1[i1] < nums2[i2]:
                i1 += 1
                flag = 1
            else:
                i2 += 1
                flag = 2
            if i1 + i2 == target:
                break
        while i1 + i2 != target:
            if i1 >= len1:
                i2 += 1
                flag = 2
            else:
                i1 += 1
                flag = 1
        sum = 0
        print(i1, i2)
        if (len1 + len2) % 2 == 0:
            if i1 >= len1:
                sum += nums2[i2]
                i2 += 1
            elif i2 >= len2:
                sum += nums1[i1]
                i1 += 1
            else:
                if nums1[i1] < nums2[i2]:
                    sum += nums1[i1]
                    i1 += 1
                else:
                    sum += nums2[i2]
                    i2 += 1
            if i1 >= len1:
                sum += nums2[i2]
            elif i2 >= len2:
                sum += nums1[i1]
            else:
                if nums1[i1] < nums2[i2]:
                    sum += nums1[i1]
                else:
                    sum += nums2[i2]
            return float(sum)/2
        else:
            if i1 >= len1:
                sum += nums2[i2]
                i2 += 1
            elif i2 >= len2:
                sum += nums1[i1]
                i1 += 1
            else:
                if nums1[i1] < nums2[i2]:
                    sum += nums1[i1]
                    i1 += 1
                else:
                    sum += nums2[i2]
                    i2 += 1
            return sum
  # 그냥 리스트끼리 합쳐서 sort하고 median 출력해도 되는 문제지만 sort의 시간복잡도는 O(nlogn)이므로 O(n)의 시간복잡도로 한 번 풀어봄
