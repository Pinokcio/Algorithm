from collections import deque
class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        answer = []
        dic = {}
        nums.sort()
        q = deque()
        bef = 10**6
        cnt = 0
        for i in nums:
            if bef != i:
                cnt = 1
                q.append(i)
                bef = i
            else:
                if cnt >= 3:
                    continue
                cnt += 1
                q.append(i)
        nums = list(q)
        length = len(nums)
        
        for i in range(length):
            target = -1 * nums[i]
            if target not in dic:
                dic[target] = i
        
        st = set()
        for i in range(1, length-1):
            for j in range(i+1, length):
                if nums[i] + nums[j] in dic:
                    if i > dic[nums[i]+nums[j]]:
                        st.add((nums[dic[nums[i]+nums[j]]], nums[i], nums[j]))
        
        for s in st:
            answer.append(list(s))
        
        return answer
        
