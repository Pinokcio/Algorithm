# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        flag = 0
        sum = 0
        l = ListNode(0, None)
        head = l
        while l1 is not None or l2 is not None:
            if l1 is None:
                t1 = 0
            else:
                t1 = l1.val
                l1 = l1.next
            if l2 is None:
                t2 = 0
            else:
                t2 = l2.val
                l2 = l2.next
            sum = (t1 + t2)
            if flag:
                sum += 1
            l.next = ListNode(sum%10, None)
            if sum >= 10:
                flag = 1
            else:
                flag = 0
            l = l.next
        if flag:
            l.next = ListNode(flag, None)
        head = head.next
        return head
