import math
def looknext(cur, li, length):
    for i in range(1, length):
        if cur+i < length and li[cur+i] == 1:
            return cur+i
        elif cur - i > -length and li[cur-i] == 1:
            return cur-i
    else:
        return 100
def solution(name):
    answer = 0
    dic = {"A":0, "B":1, "C":2, "D":3, "E":4, "F":5, "G":6, "H":7, "I":8, "J":9, "K":10, "L":11,
          "M":12, "N":13, "O":14, "P":15, "Q":16, "R":17, "S":18, "T":19, "U":20, "V":21, "W":22,
          "X":23, "Y":24, "Z":25}
    length = len(name)
    li = [0 for i in range(0, length)]
    
    for i in range(0, length):
        if name[i] != "A":
            li[i] = 1
    print(li)
    cur = 0
    while cur != 100 :
        tmp = min(dic[name[cur]], 26-dic[name[cur]])
        answer += tmp
        li[cur] = 0
        bef = cur
        cur = looknext(cur, li, length)
        if cur != 100:
            answer += abs(cur - bef)
    return answer
    
    #각 문자의 위치만큼 더하는 수는 정해져있음. 문제는 조이스틱을 좌우 중 어디로 움직여야 최단거리일지를 구하는것.
    #문자 'A'에 해당하는 위치는 갈 필요가 없으므로 다음 위치를 찾을 때 이를 고려하여 (1.해당 위치까지 조이스틱 커서가 움직여야 하며) (2.현재 위치에서 최단거리)인 위치를 찾아야한다.
