import math
class Solution:
    def minSubArrayLen(self, target: int, nums: List[int]) -> int:
        length = len(nums)
        culm = [nums[i] for i in range(length)]
        for i in range(1, length):
            culm[i] += culm[i-1]
        ans = math.inf
        if culm[length-1] < target:
                return 0
        for i in range(length):
            if i != 0 and culm[length-1] - culm[i-1] < target:
                break
            s = i
            e = length-1
            while s<=e:
                mid = (s+e)//2
                tmp = 0
                if i>0:
                    tmp = culm[mid] - culm[i-1]
                else:
                    tmp = culm[mid]
                if tmp < target:
                    s = mid + 1
                else:
                    e = mid - 1
            if i > 0:
                tmp = culm[s] - culm[i-1]
            else:
                tmp = culm[s]
            if tmp >= target:
                ans = min(ans, s - i + 1)
        if ans != math.inf:
            return ans
        return 0
