def dfs(sum, index, candidates, target, his, ans):
    if sum == target:
        ans.append(his)
        return 
    
    if sum < target:
        for c in range(index, len(candidates)):
            if sum + candidates[c] <= target:
                tmp = his[:]
                tmp.append(candidates[c])
                dfs(sum + candidates[c], c, candidates, target, tmp, ans)
            else:
                break
class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        ans = []
        candidates.sort()
        dfs(0, 0, candidates, target, [], ans)
        return ans
